{"version":3,"file":"index.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/index.js"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React, { Component } from 'react'\nimport styles from './styles.css'\n// icons\nimport closeIconLight from './images/x-light.svg';\nimport closeIconDark from './images/x-dark.svg';\nimport thumbnailLight from './images/align-justify-light.svg'\nimport thumbnailDark from './images/align-justify-dark.svg'\nimport arrowLeftLight from './images/arrow-left-light.svg'\nimport arrowLeftDark from './images/arrow-left-dark.svg'\nimport arrowRightLight from './images/arrow-right-light.svg'\nimport arrowRightDark from './images/arrow-right-dark.svg'\n\nexport default class LightRoomComponent extends Component {\n   // intial state\n   state = {\n     length: 0,\n     lightroomactive: false,\n     thumbmenuactive: false,\n     activeindex: 0,\n     path: \"\",\n     desc: \"\",\n     sub: \"\",\n     touchStart: 0,\n     touchEnd: 0\n   };\n   // varibles to store props\n   size = 4;\n   mode = \"light\";\n   componentDidMount() {\n     this.setState({\n       length: this.props.images.length\n     });\n   }\n   // controlling lightbox activation\n   openlightroom = e => {\n     this.setState({\n       lightroomactive: true\n     });\n     this.getcontent(e.target.getAttribute(\"data-index\"));\n   };\n\n   closelightroom = () => {\n     this.setState({\n       lightroomactive: false,\n       thumbmenuactive: false\n     });\n   };\n\n   //lightbox controls\n\n   moveright = () => {\n     var id = parseInt(this.state.activeindex, 10);\n     if (id == this.state.length - 1)\n       this.setState({\n         lightroomactive: false,\n         thumbmenuactive: false\n       });\n     else this.getcontent(++id);\n   };\n   moveleft = () => {\n     var id = parseInt(this.state.activeindex, 10);\n     if (id == 0)\n       this.setState({\n         lightroomactive: false,\n         thumbmenuactive: false\n       });\n     else this.getcontent(--id);\n   };\n\n   // get image at current active index\n\n   getcontent = id => {\n     this.setState({\n       activeindex: id,\n       path: this.props.images[id].src,\n       sub: this.props.images[id].sub,\n       desc: this.props.images[id].desc\n     });\n   };\n\n   // toggle thumb menu\n\n   thumbmenutoggle = () => {\n     this.setState({\n       thumbmenuactive: !this.state.thumbmenuactive\n     });\n   };\n\n   // Calculate styles - reponsible for changing style based on settings\n\n   calculateStyles = () => {\n     var columncount = 4,\n       lightroomBackground = \"rgba(255,255,255,0.95)\",\n       textColor = \"#000\";\n     if (this.props.settings) {\n       if (\n         this.props.settings.columnCount &&\n         typeof window != undefined\n       ) {\n         if (window.outerWidth <= 600)\n           columncount = this.props.settings.columnCount.mobile\n             ? this.props.settings.columnCount.mobile\n             : 2;\n         else if (window.outerWidth <= 800)\n           columncount = this.props.settings.columnCount.tab\n             ? this.props.settings.columnCount.tab\n             : 3;\n         else\n           columncount = this.props.settings.columnCount.default\n             ? this.props.settings.columnCount.default\n             : 5;\n       }\n       lightroomBackground =\n         this.props.settings.mode == \"light\"\n           ? \"rgba(255,255,255,0.95)\"\n           : \"rgba(0,0,0,0.95)\";\n       textColor =\n         this.props.settings.mode == \"light\" ? \"#000\" : \"#fff\";\n       var lightroomwidth = this.state.thumbmenuactive\n         ? \"85vw\"\n         : \"100vw\";\n     }\n     return {\n       row: {\n         columnCount: columncount\n       },\n       lightroom: {\n         backgroundColor: lightroomBackground,\n         color: textColor,\n         width: lightroomwidth\n       },\n       thumbpanel: {\n         width: this.state.thumbmenuactive ? \"15vw\" : \"0vw\",\n         background:\n           this.props.settings.mode == \"light\"\n             ? \"rgba(255,255,255,0.95)\"\n             : \"rgba(0,0,0,0.95)\"\n       }\n     };\n   };\n\n   // Swipe Controls\n\n   touchstart = e => {\n     this.setState({\n       touchStart: e.touches[0].clientX\n     });\n   };\n\n   touchmove = e => {\n     this.setState({\n       touchEnd: e.touches[0].clientX\n     });\n   };\n\n   touchend = e => {\n     const { touchStart, touchEnd } = this.state;\n     if (touchStart - touchEnd > 150) this.moveright();\n     if (touchStart - touchEnd < -150) this.moveleft();\n   };\n\n   render() {\n     const runtimeStyles = this.calculateStyles();\n\n     return (\n       <div>\n         <div className={styles.row} style={runtimeStyles.row}>\n           {this.props.images.map((img, i) => (\n             <div className={styles.column} key={i}>\n               <img\n                 data-index={i}\n                 src={img.src}\n                 onClick={this.openlightroom}\n               />\n             </div>\n           ))}\n         </div>\n\n         <div\n           className={styles.lightroom}\n           style={{\n             visibility: this.state.lightroomactive\n               ? \"visible\"\n               : \"hidden\",\n             ...runtimeStyles.lightroom\n           }}\n         >\n           <div className={styles.topmenu}>\n             <img\n               src={\n                 this.props.settings.mode == \"light\"\n                   ? thumbnailDark\n                   : thumbnailLight\n               }\n               className={styles.icon}\n               onClick={this.thumbmenutoggle}\n             />\n             <img\n               src={\n                 this.props.settings.mode == \"light\"\n                   ? closeIconDark\n                   : closeIconLight\n               }\n               className={styles.icon}\n               onClick={this.closelightroom}\n             />\n           </div>\n           <div\n             className={styles.lightroomcontent}\n             onTouchStart={this.touchstart}\n             onTouchMove={this.touchmove}\n             onTouchEnd={this.touchend}\n           >\n             <img\n               className={styles.lightroomimg}\n               src={this.state.path}\n               style={{ maxWidth: \"100%\" }}\n             />\n           </div>\n           <div className={styles.lightroomdesc}>\n             <h1>{this.state.name}</h1>\n             <p className={styles.desc}>{this.state.desc}</p>\n             <p className={styles.sub}>{this.state.sub}</p>\n           </div>\n           <img\n             src={\n               this.props.settings.mode == \"light\"\n                 ? arrowLeftDark\n                 : arrowLeftLight\n             }\n             className={styles.carouselcontrolprev}\n             role=\"button\"\n             onClick={this.moveleft}\n           />\n           <img\n             src={\n               this.props.settings.mode == \"light\"\n                 ? arrowRightDark\n                 : arrowRightLight\n             }\n             className={styles.carouselcontrolnext}\n             role=\"button\"\n             onClick={this.moveright}\n           />\n         </div>\n         <div\n           className={styles.thumbpanel}\n           style={runtimeStyles.thumbpanel}\n         >\n           {this.props.images.map((img, i) => (\n             <div\n               className={styles.thumbnail}\n               data-index={i}\n               key={i}\n               onClick={this.openlightroom}\n               style={{\n                 backgroundImage: `url(${img.src})`\n               }}\n             ></div>\n           ))}\n         </div>\n       </div>\n     );\n   }\n }\n"],"names":["LightRoomComponent","state","size","mode","openlightroom","setState","getcontent","e","target","getAttribute","closelightroom","moveright","id","parseInt","activeindex","length","moveleft","props","images","src","sub","desc","thumbmenutoggle","thumbmenuactive","calculateStyles","columncount","lightroomBackground","textColor","settings","columnCount","window","undefined","outerWidth","mobile","tab","default","lightroomwidth","touchstart","touches","clientX","touchmove","touchend","touchStart","touchEnd","runtimeStyles","React","styles","row","map","img","i","column","lightroom","lightroomactive","topmenu","thumbnailDark","thumbnailLight","icon","closeIconDark","closeIconLight","lightroomcontent","lightroomimg","path","maxWidth","lightroomdesc","name","arrowLeftDark","arrowLeftLight","carouselcontrolprev","arrowRightDark","arrowRightLight","carouselcontrolnext","thumbpanel","thumbnail","Component"],"mappings":"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"}